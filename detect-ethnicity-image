from tensorflow.keras.applications.mobilenet_v2 import preprocess_input
from tensorflow.keras.preprocessing.image import img_to_array
import numpy as np
import tensorflow as tf
import cv2
import os

prototxtPath = os.path.sep.join(["C:\\Users\makra\OneDrive\Desktop\Conda\ImageProcess\ethnicity-detector\ethnicity_detector", "deploy.prototxt"])
weightsPath = os.path.sep.join(["C:\\Users\makra\OneDrive\Desktop\Conda\ImageProcess\ethnicity-detector\ethnicity_detector",
	"res10_300x300_ssd_iter_140000.caffemodel"])
net = cv2.dnn.readNetFromCaffe(prototxtPath, weightsPath)

with open('ethicity_detector.json', 'r') as json_file:
    json_savedModel= json_file.read()
model_j = tf.keras.models.model_from_json(json_savedModel)
model_j.load_weights('model.h5')
model_j.compile(loss='sparse_categorical_crossentropy',
         optimizer='SGD',
         metrics=['accuracy'])

image = cv2.imread("test1.jpg")
orig = image.copy()
(h, w) = image.shape[:2]

blob = cv2.dnn.blobFromImage(image, 1.0, (224, 224),
	(104.0, 177.0, 123.0))
net.setInput(blob)
detections = net.forward()

for i in range(0, detections.shape[2]):
	confidence = detections[0, 0, i, 2]

	if confidence > 0.5:
		box = detections[0, 0, i, 3:7] * np.array([w, h, w, h])
		(startX, startY, endX, endY) = box.astype("int")

		(startX, startY) = (max(0, startX), max(0, startY))
		(endX, endY) = (min(w - 1, endX), min(h - 1, endY))

		face = image[startY:endY, startX:endX]
		face = cv2.cvtColor(face, cv2.COLOR_BGR2RGB)
		face = cv2.resize(face, (224, 224))
		face = img_to_array(face)
		face = preprocess_input(face)
		face = np.expand_dims(face, axis=0)

		(black, white) = model_j.predict(face)[0]

		label = "Black" if black > white else "White"
		color = (255, 100, 100) if label == "White" else (100, 100, 255)

		label = "{}: {:.2f}%".format(label, max(black, white) * 100)

		cv2.putText(image, label, (startX, startY - 10),
			cv2.FONT_HERSHEY_SIMPLEX, 0.45, color, 2)
		cv2.rectangle(image, (startX, startY), (endX, endY), color, 2)

cv2.imshow("Output", image)
cv2.imwrite('phototest3.jpg', image)
cv2.waitKey(0)
